====================================================================================================
DETAILED TASK ANALYSIS FOR NUMPY-PANDAS-MATPLOTLIB NOTEBOOK
====================================================================================================

SECTION GROUPING:
----------------------------------------------------------------------------------------------------

Pandas Section: Cells [16, 20, 23, 26, 29]
Matplotlib Section: Cells [37]
Numpy Section: Cells []


====================================================================================================
CELL 16
====================================================================================================

Task Description:
----------------------------------------------------------------------------------------------------
### <font color='DarkOrange'>**Задание 1 [0.5 баллa]**</font>

Загрузите данные и посмотрите на колонку publishedAt
* <font color='DarkOrange'>**(0.1 балла)**</font> Какого она типа?
* <font color='DarkOrange'>**(0.2 балла)**</font> Измените тип колонки на `datetime`. Покажите, что после изменения колонка действительно имеет тип `datetime`.
* <font color='DarkOrange'>**(0.2 балла)**</font> В какой месяц было добавлено больше всего видеороликов?

Current Code:
----------------------------------------------------------------------------------------------------
# Your code here


====================================================================================================
CELL 20
====================================================================================================

Task Description:
----------------------------------------------------------------------------------------------------
### <font color='DarkOrange'>**Задание 2 [1 балл]**</font>

Посмотрите на колонку `description`.
* <font color='DarkOrange'>**(0.3 балла)**</font> Переведите строки в нижний регистр и обрежьте ненужные пробелы справа и слева.
* <font color='DarkOrange'>**(0.5 балла)**</font> Замените url-адреса  в описаниях на специальный тэг `\<URL\>` (прямо как строчку, "\<URL\>").
* <font color='DarkOrange'>**(0.2 балла)**</font> Выведите полностью description для видеоролика с `video_id = 'Oxexirlmdig'`.


Current Code:
----------------------------------------------------------------------------------------------------
# Your code here


====================================================================================================
CELL 23
====================================================================================================

Task Description:
----------------------------------------------------------------------------------------------------
### <font color='DarkOrange'>**Задание 3 [1 балл]**</font>

Какое максимальное число просмотров (колонка `view_count`) у видеороликов, выпущенных во Франции или Италии (в колонке country значениe FR или IT) в июле (колонка publishedAt)?

Необходимо придумать решение `в одну строку`, используя для выбора строк несколько условий, объединенных с помощью | вместо or, & вместо and и ~ вместо not, а также используя функцию [isin](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.isin.html).

Current Code:
----------------------------------------------------------------------------------------------------
# Your code here


====================================================================================================
CELL 26
====================================================================================================

Task Description:
----------------------------------------------------------------------------------------------------
### <font color='DarkOrange'>**Задание 4 [0.5 баллa]**</font>
* <font color='DarkOrange'>**(0.2  балла)**</font>  Посмотрите на названия каналов из 17 категории (колонка categoryId). Как вы думаете, что это за категория?
* <font color='DarkOrange'>**(0.3  балла)**</font> Предположим, что была допущена ошибка, и все видеоролики из 17 категории, относятся к 16 категории. Исправьте нужные значения в колонке categoryId, после чего выведите все уникальные категории.

<font color='LightSteelBlue'>**Подсказка**</font>
Обратите внимание, что при выборе полей с помощью оператора индексирования \[\] возвращается копия выбранных значений. При попытке присвоить таким образом новые значения для некоторых полей таблицы, будет выдано предупреждение. Более надежный способ - использовать операторы `loc` и `iloc`. Подробнее про индексацию и выбор строк можно прочитать [здесь](https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html).

Current Code:
----------------------------------------------------------------------------------------------------
# Your code here


====================================================================================================
CELL 29
====================================================================================================

Task Description:
----------------------------------------------------------------------------------------------------
### <font color='DarkOrange'>**Задание 5 [0.5 баллa]**</font>

Посмотрите на колонку `tags`.

* <font color='DarkOrange'>**(0.2 балла)**</font> Замените строки со значением '[none]' на пустую строку.
* <font color='DarkOrange'>**(0.3 балла)**</font> Какой самый популярный тэг? Обратите внимание, что у каждого видеоролика может быть более 1 тэга.

<font color='LightSteelBlue'>**Подсказка**</font>

Чтобы получить правильное значение, не забудьте обработать множество тэгов - убрать пробельные символы по краям и привести строки в нижний регистр.

<font color='LightSteelBlue'>**Подсказка**</font>

Нужный тэг встречается больше 130 раз.

Current Code:
----------------------------------------------------------------------------------------------------
# Your code here


====================================================================================================
CELL 37
====================================================================================================

Task Description:
----------------------------------------------------------------------------------------------------
### <font color='DarkOrange'>**Задание 1 [0,5 балл]**</font>

Изобразите на одном полотне несколько графиков вида `box_plot`, отображающие: для каждой страны (`country`) box_plot распределения значения просмотров (`view_count`). Причем нужно это сделать только по тем роликам, по которым комментарии запрещены (`comments_disabled`)

Ответьте на вопрос, опираясь на график: в каких двух странах в среднем наибольшее число просмотров?

Current Code:
----------------------------------------------------------------------------------------------------
# your code here


====================================================================================================
NUMPY SECTION ANALYSIS
====================================================================================================


====================================================================================================
NUMPY IMPLEMENTATION FILES
====================================================================================================


Cell 41 mentions research_functions:
----------------------------------------------------------------------------------------------------
<font color='OrangeRed'>**Внимание!**</font>

* Файлы research_functions.py и research_functions_vectorised.py с реализованными функциями необходимо <font color='OrangeRed'>сдать на тестирование</font> в проверяющей системе.


Cell 42 mentions research_functions:
----------------------------------------------------------------------------------------------------
### <font color='DarkOrange'>**Задачи 1-5 [5 баллов]**</font>

Для каждой из задач ниже привидите 2 реализации: одна без использования numpy, а вторая полностью векторизованная (**без использования циклов/map/list comprehension**). Реализации без использования векторизации нужно записать в файл research_functions.py, а векторизованные — в файл research_functions_vectorised.py (см. шаблоны).

<font color='OrangeRed'>**Внимание!**</font>

Векторизованные реализации с использованием циклов/map/list


Cell 47 mentions research_functions:
----------------------------------------------------------------------------------------------------
<font color='OrangeRed'>**Внимание!**</font> В текущую директорию необходимо загрузить файлы  research_functions.py и research_functions_vectorised.py с реализованными функциями. В Google Colab это можно сделать, нажав на значок "папки" слева, дальше на "загрузить" (значок листа со стрелкой вверх). Загружать нужно в папку "sample_data" (она у вас откроется по умолчанию)


Cell 48 mentions research_functions:
----------------------------------------------------------------------------------------------------
import time
import numpy as np

import research_functions_vectorised
import research_functions


Cell 51 mentions research_functions:
----------------------------------------------------------------------------------------------------
# получим время работы функций

# max_prod_mod_3

# max_prod_mod_3_time = []
# max_prod_mod_3_vectorised_time = []

# for x in max_prod_mod_3_data:
#    max_prod_mod_3_time += [count_time(research_functions.max_prod_mod_3, x.tolist())]
#    max_prod_mod_3_vectorised_time += [count_time(research_functions_vectorised.max_prod_mod_3, x)]

# are_multisets_equal
# ...

# convert_image
# ...

# rle_scalar
# ...

# cosine_distance
# ...

